class Cart(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    gallery_item = models.ForeignKey(Gallery, on_delete=models.CASCADE)
    quantity = models.PositiveIntegerField(default=1)

    def __str__(self):
        return f"{self.user.username} - {self.gallery_item.title1} x {self.quantity}"

    def total_price(self):
        return self.gallery_item.price * self.quantity  # Assuming each product has a 'price' field 





<!-- cart.html -->
<h2>Your Cart</h2>
<div class="cart-items">
    {% for item in cart_items %}
        <div class="cart-item">
            <img src="{{ item.gallery_item.feedimage.url }}" alt="{{ item.gallery_item.title1 }}">
            <div class="product-item">
                <div class="product-details">
                    <p class="product-title">{{ i.title1 }}</p><br>
                    <p class="product-description">{{ i.title2 }}</p><br>
                    <p class="product-price">{{ i.title3 }}</p><br>

                    <!-- Shoe Size Selection Dropdown -->
                    <label for="size">Select Shoe Size:</label><br>
                    <select id="size">
                        <option value="5">5</option>
                        <option value="6">6</option>
                        <option value="7">7</option>
                        <option value="8">8</option>
                        <option value="9">9</option>
                    </select><br>

                    
                    <p><strong>Height:</strong> 1.9 inches (4.7 cm)</p><br><br>
                </div>
                <!-- <div class="product-image">
                        <img src="{{ i.feedimage.url }}" alt="Gallery Image">
                </div>
            </div> -->
                <a href="{% url 'remove_from_cart' item.id %}">Remove</a>
            </div>
        </div>
    {% endfor %}
</div>






@login_required
def add_to_cart(request, id):
    # Get the gallery item by ID
    gallery_item = Gallery.objects.get(id=id)

    # Check if the item already exists in the user's cart
    cart_item, created = Cart.objects.get_or_create(user=request.user, gallery_item=gallery_item)

    if not created:
        # If the item is already in the cart, just increase the quantity
        cart_item.quantity += 1
        cart_item.save()

    messages.success(request, f"{gallery_item.title1} has been added to your cart!")
    return redirect('firstpage')  # Redirect to a cart or continue shopping page


@login_required
def view_cart(request):
    # Get all cart items for the logged-in user
    cart_items = Cart.objects.filter(user=request.user)
    # total_price = sum(item.total_price() for item in cart_items)

    return render(request, 'cart.html', {'cart_items': cart_items})


@login_required
def remove_from_cart(request, cart_id):
    try:
        cart_item = Cart.objects.get(id=cart_id, user=request.user)
        cart_item.delete()
        messages.success(request, "Item removed from your cart.")
    except Cart.DoesNotExist:
        messages.error(request, "Item not found in your cart.")

    return redirect('view_cart')  # Redirect to the cart page


 path('add-to-cart/<int:id>/', views.add_to_cart, name='add_to_cart'),
    path('view-cart/', views.view_cart, name='view_cart'),
    path('remove-from-cart/<int:cart_id>/', views.remove_from_cart, name='remove_from_cart'),


 <!-- <a href="{% url 'view_cart' %}"> -->

<!-- <a href="{% url 'add_to_cart' i.id %}"><button class="add-to-cart">Add to Cart</button></a> -->